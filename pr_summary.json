{"commit 59daef8d55de04b91434b39d4411a7939107645b":["\n- Removed the line that throws an InvalidAttributeValueException if the name is invalid\n- Added parameter for the generated id alphanumeric key\n- Updated the savePlaylist method to include the parameter for the generated id alphanumeric key\n- Updated the if-else statement for the tags\n- Updated the savePlaylist method to return the Playlist","\n\u2022 Added id generation using MusicPlaylistServiceUtils.generatePlaylistId()\n\u2022 Added validation of the name using MusicPlaylistServiceUtils.isValidString()\n\u2022 Added InvalidAttributeValueException to be thrown in case the name is invalid\n\u2022 Removed unnecessary parameters from savePlaylist() call","DIFF ERRORS = 0"],"commit beed1c7f61d76ba0089adde68045262b8d13394f":["ERROR: CONTAINS \"@@\" BANNED PHRASE","ERROR: CONTAINS \"@@\" BANNED PHRASE","\n\n- Remove log.info() line\n+ Add PlaylistNotFoundException thrown declaration to method signature\n+ Add Playlist variable and PlaylistModel variable lines\n+ Add PlaylistDao.getPlaylist() line"," \n- Removed check for valid string name\n- Saved the id, request name, customer id, empty list and tag information\n- Converted the Playlist response to PlaylistModel\n- Created and returned a CreatePlaylistResult object with PlaylistModel","DIFF ERRORS = 2"],"commit e5a74e54819ae94e2a933e442011cfe7eb7e5e74":["DIFF ERRORS = 0"],"commit 622013ee948e1fd00d2983e7aa17ff59e83b8a9d":["\n\n\u2022 Added @DynamoDBHashKey and @DynamoDBRangeKey annotation to asin and trackNumber, respectively.\n\u2022 Added @DynamoDBAttribute annotation to albumName and songTitle.\n\u2022 Added getters and setters for asin, trackNumber, albumName and songTitle.","\n- Removed default constructor \n+ Added method to get Album Track by asin and track number","\n- Removed .withTags(playlist.getTags()) from ModelConverter\n+ Added method toSongModel for conversion of AlbumTrack to SongModel \n+ Added convertList for converting list of AlbumTracks to List of SongModels","\n- Removed line containing `Collections.singletonList(SongModel.builder().build())`\n+ Added lines for getting `playlist` from the `playlistDao` \n+ Added logic for if the order is set to shuffled or reversed\n+ Updated return statement to convert list of `AlbumTrack` from the `playlist` to `SongModel` list"," \n- Added validation to handleRequest() function to check if the playlist and album track exists. \n- Added code to save the updated playlist list with new songs. \n- Added code to convert playlist into SongModel object and added it to the result. \n- Removed empty SongModel object from result.","DIFF ERRORS = 0"],"commit d24c91dabc8ca252a2af7d3db3dbb59f05835863":["\n\u2022 Added \"component name= \"PropertiesComponent\" tag\n\u2022 Added content to \"PropertiesComponent\" tag\n\u2022 Removed empty line at the end of the file","\n- Removed: public class InvalidAttributeValueException extends RuntimeException\n+ Added: public class InvalidAttributeValueException extends InvalidAttributeException","\n+\n++ Added serialVersionUID \n++ Added 4 constructors \n++ Added cause parameter to all constructors \n+- Removed parameters from all constructors\n+- Removed duplicate code from all constructors\n+- Removed unnecessary throwable call from all constructors\n+\n","\n+\u2022 Added InvalidAttributeChangeException class\n+\u2022 Added serialVersionUID\n+\u2022 Added 4 constructor methods with message and\/or cause as parameters\n","DIFF ERRORS = 0"],"totalNumberOfCommits":["16"],"commit a7357edcb9523105a0d645ffbd3b5d0514a68acd":["\n\n- Removed serialVersionUID\n+ Added serialVersionUID with value 1","\n\n-Removed RuntimeException\n+Added serialVersionUID","\n \n-Removed static field serialVersionUID.\n+Added static field serialVersionUID with value of 1.","DIFF ERRORS = 0"],"commit f1f37e844a58b69b792b0676ee2112261e1a6f51":["\n\n-Added import statement for class MetricsPublisher \n-Removed import statement for class MetricsPublisher \n-Added try-catch block with InvalidAttributeChangeException catch block \n-Added try-catch block with InvalidAttributeValueException catch block\n-Added try-catch block with PlaylistNotFoundException catch block","DIFF ERRORS = 0"],"commit cc7e171231f885ee705977d1a3117838ed800dcd":["SERVICE_ERROR_CAUSE: java.net.SocketTimeoutException: timeout","SERVICE_ERROR_CAUSE: java.net.SocketTimeoutException: timeout","DIFF ERRORS = 1"],"commit 03940704f912eb159835fa886bc0f3c020c08258":["\n- Removed check for playlist existing\n- Added check for invalid attribute change\n- Added metric count for invalid attribute change\n- Added metric count for invalid attribute value\n- Removed redundant code\n- Added return statement","\n- Removed single argument constructor \n+ Added MetricsPublisher parameter\n+ Added metricsPublisher field \n+ Added metricsPublisher field to constructor","\n\u2022\tAdded \"height\", \"width\", \"y\", \"x\" properties to all widgets\n\u2022\tAdded \"view\", \"stacked\", \"region\", \"title\" properties to first widget\n\u2022\tAdded \"expression\", \"label\", \"id\", \"visible\" properties to second and third widget\n\u2022\tAdded \"stat\" and \"period\" properties to second and third widget\n\u2022\tAdded second and third metric to second widget\n\u2022\tAdded third metric to third widget","DIFF ERRORS = 0"],"commit 2d50a328455feaa54a2ae22bcc95f21e5498279e":["\n\u2022 Added classes: InvalidAttributeValueException, InvalidAttributeChangeException\n\u2022 Removed field: serialVersionUID in AlbumTrackNotFoundException, InvalidAttributeException","\n\u2022 Added serialVersionUID to the class.","\n\n- Added class InvalidAttributeChangeException extending from InvalidAttributeException\n- Added constructor with String message and Throwable cause parameters"," \n+\u2022 Added songlist parameter to the savePlaylist method.\n+\u2022 If songlist is empty, set an empty list in the playlist.\n+\u2022 If tags is empty, set null in the playlist.","\n- Removed code to return UpdatePlaylistResult with empty playlist when request is received \n+ Validation added to check if id and name consist of valid characters \n+ Added code to check if customer id remains the same when updating the playlist \n+ Added code to save updated playlist in database and convert updated playlist to playlist model \n+ Added exception to throw when attempting to update a playlist that could not be found","\n\u2022 Added an empty list in the \u2018savePlaylist\u2019 function. \n\u2022 Changed the parameters of the \u2018savePlaylist\u2019 function to include the empty list.","DIFF ERRORS = 0"],"commit a882206726828b656a46d6e587afe2af5b4c1497":["DIFF ERRORS = 0"],"commit f39be29633d8de423e2d9c3eb13968e56dd29564":["\n- Save playlist to database\n+ Save playlist to database with valid Customer Id checks\n+ Add logic to throw error when invalid Customer Id change is attempted\n+ Return empty playlist if an error occurred","\n- No changes\n+ Added code to generate an id for the playlist\n+ Added code to save the playlist's details\n+ Added code to convert playlist details to a playlist model\n+ Added code to build the CreatePlaylistResult object","DIFF ERRORS = 0"],"commit 6aa91551de39ed65d8ad7b175390892ecfcd4362":["DIFF ERRORS = 0"],"commit 8191fbb89213d362867d9057a0b983addbd1b37d":["DIFF ERRORS = 0"],"commit 3afdb44e0ba44aa2dabc7d2c16a8ba76e2deaddb":["\n\n- Removed metricsPublisher.addCount(MetricsConstants.GETPLAYLIST_PLAYLISTNOTFOUND_COUNT, 0);\n+ Added savePlaylist() method for saving the playlist including customerId, name, tags and generating id for playlist using MusicPlaylistServiceUtils.\n+ Added name validation using MusicPlaylistServiceUtils.  \n+ Added saving of current Playlist object to DynamoDB."," \n \n\u2022 Added logic to save playlist using DAO\n\u2022 Added logic to convert model using ModelConverter\n\u2022 Replaced blank Playlist model builder with generated playlist model","DIFF ERRORS = 0"],"commit e741f35eb2b7177baf5d9221f7fd9be70fd75672":["\n\u2022 Added a comment to indicate code changes were made for a branch","DIFF ERRORS = 0"]}