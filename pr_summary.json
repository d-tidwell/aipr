{"commit 59fd8b889af6ee0fdc62231f47abd68b6dfae973":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit b6f8825c02bf29b84f258aa28f5dcfa301ffae6f":[" \n-Removed Map declaration\n-Added loop to iterate over list to check for matching fulfillment centers \n-Removed outer loop and simplified inner loop to loop once over list  \n-Changed comparison operator in inner loop to equals instead of not equals \n-Added logic to map matching fulfillment centers to their respective shipment options \n","\n\u2022 Added variable 'fulfillmentCenter' to check if available in packagingMap.\n\u2022 Replaced 'fcPackagingOption.getPackaging()' with 'packagingMap.containsKey (fulfillmentCenter.getFcCode())' to check if key is present.\n\u2022 Removed variable 'fcFound', as no longer needed.","\n- Removed initializing packagingMap to an empty HashMap\n+ Initialized packagingMap to contain fulfillment center and packaging entries from datastore"," \n\u2022 Added Map to store FulfillmentCenter and Packaging objects\n\u2022 Removed the List of fcPackagingOptions","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 24b367113da9fa23d4133b58b9016d355a973cec":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"totalNumberOfCommits":["30"],"commit dce9de6dcf62f500cd1789743020064da844aead":["\n\u2022 + Added inject PrepareShipmentActivity\n\u2022 + Added inject ShipmentService\n\u2022 + Added inject PackagingDAO\n\u2022 + Added inject PackagingDatastore\n\u2022 + Added inject WeightedCostStrategy\n\u2022 + Added inject CarbonCostStrategy\n\u2022 + Added inject MonetaryCostStrategy\n\u2022 - Removed PackagingFactory","\n\u2022 Added @Inject annotation above the constructor \n\u2022 Constructor now takes two additional parameters: PackagingDAO and CostStrategy","\n\n- Removed import statement for Logger\n+ Added import statement for Inject \n+ Added @Inject annotation on constructor"," \n- Removed getProvider() method\n+ Added DaggerServiceComponent to getProvider() method.","\n\n\u2022 Added import for PrepareShipmentActivity\n\u2022 Added import for ServiceComponent and DaggerServiceComponent \n\u2022 Added code to create a ServiceComponent\n\u2022 Added log4j for logging\n\u2022 Removed unused imports","\n- Removed injection of CostStrategy & PackagingDatastore\n+ Added injection of PrepareShipmentActivity & PackagingDAO"," \n\u2022 Added CostModule class \n\u2022 Added provides CostStrategy() method\n\u2022 Provided WeightedCostStrategy() implementation of the CostStrategy interface in the provideCostStrategy() method.\n"," \n\u2022 Added @Inject annotation \n\u2022 Added constructor","\n\u2022 Added @Inject and @Singleton annotations\n\u2022 Removed empty line","\n\u2022 Added @Inject annotation \n\u2022 Instantiated fcPackagingOptions using PackagingDatastore object","\n- Remove reference to constructor\n+ Add @Inject annotation to inject dependencies","\n\u2022 Added @Inject annotation to the constructor \n\u2022 Added parameter ShipmentService shipmentService to the constructor","\n- Inject annotation added to FulfillmentService.","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit bd7de00112e8b4276051e7cf8724704b711779a0":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit c42fb5e5b41f8765a8416d93d62262c5d10627a3":["\n- Changed signature of findShipmentOptions to take FulfillmentCenter as a parameter\n- Handle null inputs inside API \n- Check all FcPackagingOptions for a suitable Packaging in the given FulfillmentCenter\n- Add packagingMap.values() to filter Packaging objects \n- Compare item size with Packaging object \n- Check if FulfillmentCenter is in packagingMap\n- Remove duplicates from result list\n- Throw UnknownFulfillmentCenterException if FulfillmentCenter is not found\n- Throw NoPackagingFitsItemException if item doesn't fit in any Packaging"," \n\u2022 Added Set to store Packaging for each FulfillmentCenter \n\u2022 Updated packagingMap to map FulfillmentCenter to Set of Packaging \n\u2022 Iterated through list of FcPackagingOption, adding new Packaging Set or appending to existing Packaging Set  in packagingMap.","\n- Replaced ArrayList with List\n- Replaced HashMap with Map","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 0dcdc744c755432d20c6a20c660d6c5255828706":["\n\u2022 Added CostStrategy to PrepareShipmentRequest \n\u2022 Added ShipmentService to CostStrategy \n\u2022 Added PrepareShipmentActivity to ShipmentService \n\u2022 Added FC to PrepareShipmentActivity","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 0442a4a21bea0d6655da26874f8aa90b8970d4b1":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 286cee60aa75349c3a61077aa062131c2b1a2745":["\n- Added an exception for when no packaging exists for an item at a specified fulfillment center\n- Removed redundant code that was checking for duplicates","\n\u2022 Added a check to confirm that the requested fulfillmentCenter exists in PackagingDataStore\n\u2022 Replaced loop with looking up the suitable Packaging in the given FulfillmentCenter\n\u2022 Removed unused loop code","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 42dcca94ee729bc0552c0b0ac22a9d918196d467":["\n\u2022 Added PolybagTest line 8\n\u2022 Added variables to setUp and changed their initial value lines 19-23\n\u2022 Added canFitItem tests lines 25-44\n\u2022 Added getMass test lines 47\n\u2022 Added equals test lines 50-56\n\u2022 Changed the initial value of volume and volume2 lines 9-10\n\u2022 Removed the BigDecimal and BigInteger variables lines 14-17\n","\n\u2022 Added: iad2_2000cc, iad2_10000cc \n\u2022 Removed: None","\n\u2022 Added FcPackagingOption iad2_2000cc\n\u2022 Added FcPackagingOption iad2_10000cc","\n\u2022 Added Packaging objects: package2000cc, package10000cc\n\u2022 Added FcPackagingOption objects: ind1_10Cm, abe2_20Cm, abe2_40Cm","\n\u2022 Added imports for Box, FcPackagingOption, FulfillmentCenter, and Packaging \n\u2022 Removed unused imports","\n\n\u2022 Added a constructor which takes in a BigDecimal volume \n\u2022 Implemented canFitItem(Item item) function to compare volume of Polybag to the item\n\u2022 Overwrote toString() with volume\n\u2022 Added getMass() to return the mass of the Polybag\n\u2022 Added equals() and hashCode() functions\n","\n-Removed CORRUGATE \n+Added LAMINATED_PLASTIC","\n\u2022 Added createBagFcPackagingOption() method to create FcPackagingOption object with a Polybag and BigDecimal for the volume."," \n\u2022 Added two createBagFcPackagingOption(\"IAD2\", \"2000\") and createBagFcPackagingOption(\"IAD2\", \"10000\")\n\u2022 Removed createBoxFcPackagingOption(\"PDX1\", \"60\", \"60\", \"60\")","\n- Added imports for Box, FcPackagingOption, FulfillmentCenter and Packaging\n- Deleted imports for Box, FcPackagingOption, FulfillmentCenter and Packaging","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit ffa32d6384459806583798b3a14ca7445104821f":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit e13fff02722d6b875c519f0947033d8184aa75f9":["\n\u2022 Added test for checking if two boxes have equal value \n\u2022 Added test for checking if two boxes do not have equal values","\n\u2022 Added test to ensure multiple copies of same material do not get created \n\u2022 Removed comments about for each method","\n- Removed line referring to FulfillmentCenter ind1\n- Added line referring to FulfillmentCenter pdx1 ","\n- Added import statement for FcPackagingOption\n- Added assertEquals() for FcPackagingOptions\n- Added data for FcPackagingOptions to itemPackagingOptions()","\n- Removed abstract keyword\n+ Added equals and hashCode methods","\n\u2022 Added line to include Objects library\n\u2022 Removed empty line between BigDecimal declaration and Represents comment line"," \n- Added two override methods: equals() and hashCode().","\n- Removed imports\n+ Added import for Objects class","\n- Removed 'public class Box extends Packaging'\n+ Added overrides to the methods equals() and hashCode()","\n- Removed unnecessary blank line\n+ Imported objects class\n","\n\u2022 Added check to ensure given fulfillment center fits item\n\u2022 Removed redundant ShipmentOption once code is run through loop\n\u2022 Added nested loop to remove duplicate ShipmentOption matching FulfillmentCenter and Packaging","\n\u2022 Added a parameter to PackagingDAO constructor \n\u2022 Replaced initializer of fcPackagingOptions with datastore parameter","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 686133170bd9756594deea6b4c16f757e5ef1666":["\n- Added new test 'getCost_laminateMaterial_returnsCorrectCost'\n- Adjusted 'getCost_cardboardBox_returnsCorrectCost' to check for the new expected cost of 15.43","\n\u2022 Added a new packaging: BAG_10000cc\n\u2022 Changed Box packaging to include measurements of 10x10x20","\n\u2022 Added imports for Box, Packaging, ShipmentCost and ShipmentOption\n\u2022 Removed imports for Box, Packaging, ShipmentCost and ShipmentOption","\n+ Added CarbonCostStrategyTest class\n+ Added variables for box and bag packaging \n+ Added setUp method to setup CarbonCostStrategy instance \n+ Added getCost_corrugateMaterial_returnsCorrectCost method to test carbon cost calculation for corrugate material\n+ Added getCost_laminateMaterial_returnsCorrectCost method to test carbon cost calculation for laminate material \n","\n\u2022 Added materialCostPerGram entry for Material type - LAMINATED_PLASTIC \n\u2022 Value for LAMINATED_PLASTIC set to BigDecimal.valueOf(.25)"," \n\u2022 Added CarbonCostStrategy class implementing CostStrategy interface\n\u2022 Added constructor CarbonCostStrategy() for initializing Map of carbon cost per gram for different materials\n+\u2022 Added method getCost() for calculating the shipment cost using the carbon cost associated with the shipment's material\n\u2022 Removed packageCost method for calculating the shipment cost\n\u2022 Removed Map reference of package costs in CostCalculator class \n","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit\n---\n .gitattributes":["\n\u2022 Added 'AWSTemplateFormatVersion' to specify the current AWS serverless template format.\n\u2022 Added 'Transform' to specify the newest version of the AWS serverless template.\n\u2022 Added 'Description' to specify application purpose.\n\u2022 Added 'Globals' block with the 'Function' and the 'Api' section to specify the function's timeout and API tracing.\n\u2022 Added 'Resources' block with 'SustainableShipmentService' to specify the resource information.\n\u2022 Added 'CodeUri' to specify the location of the code to use for the function.\n\u2022 Added 'Handler' to specify the code entrypoint.\n\u2022 Added 'Runtime' to specify java 11.\n\u2022 Added 'Architectures' with x86_64.\n\u2022 Added 'MemorySize' to specify memory size of 512.\n\u2022 Added 'Environment' block to specify JAVA_TOOL_OPTIONS.\n\u2022 Added 'Events' with 'SustainableShipmentService' to specify the path and http method."," \n\u2022 Added an actor - FC\n\u2022 Added a participant - PrepareShipmentActivity\n\u2022 Added a participant - CostStrategy\n\u2022 Added a loop to check if the item can fit in Packaging and add the result to the result set\n\u2022 Added a message from ShipmentService to PackagingDAO to find shipment options","\n\u2022 Added rootProject.name = 'u2-SustainabilityShipmentService'\n\u2022 Included additional modules: SustainabilityShipmentServiceLambda, SustainabilityShipmentServiceTCTs, list, and utilities"," \n\u2022 Added script directory, log directory, and log file variables\n\u2022 Added function die() and die_if_empty() \n\u2022 Added variables for lambda and event \n\u2022 Added function parse_args() to parse command line arguments\n\u2022 Added function ensure_log_dir() to create log directory if not present \n\u2022 Added function sam_local_invoke() to invoke the lambda \n\u2022 Modified main to call functions parse_args(), ensure_log_dir(), and sam_local_invoke()","\n\u2022 Added start and end rem tags \n\u2022 Added Apache License header\n\u2022 Uppercased and updated tags in header\n\u2022 Updated paths to use %%i variables \n\u2022 Set GRADLE_EXIT_CONSOLE variable to check if console needs to be exited\n\u2022 Updated exit codes in failure and mainEnd sections","ERROR: Prompt size to large to complete request for file in:  commit\n---\n .gitattributes","\n - Added: \n  + distributionBase=GRADLE_USER_HOME\n  + distributionPath=wrapper\/dists\n  + distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-7.4.2-bin.zip\n  + zipStoreBase=GRADLE_USER_HOME\n  + zipStorePath=wrapper\/dists\n \n - Removed: \n  - no lines were removed","\n\n+ Added \"queryStringParameters\" object with six properties\n- Removed \"successMessages\" and \"errorMessages\" objects"," \n\u2022 Added queryStringParameters to the code  \n\u2022 Added fcCode, itemAsin, itemDescription, itemLength, itemWidth, itemHeight to the queryStringParameters section \n\u2022 Removed the trailing newline from the end of the file","\n\u2022 Added \u201CAccept-Encoding\u201D, \u201Ccache-control\u201D, \u201CCloudFront-Forwarded-Proto\u201D, \u201CCloudFront-Is-Desktop-Viewer\u201D, \u201CCloudFront-Is-Mobile-Viewer\u201D, \u201CCloudFront-Is-SmartTV-Viewer\u201D and \u201CCloudFront-Is-Tablet-Viewer\u201D headers\n\u2022 Added \u201CCloudFront-Viewer-Country\u201D header\n\u2022 Added \u201CheaderName\u201D and \u201CheaderValue\u201D fields to \u201Cheaders\u201D\n\u2022 Added \u201CaccountId\u201D, \u201CresourceId\u201D, \u201Cstage\u201D, \u201CrequestId\u201D, \u201Cidentity\u201D, \u201CresourcePath\u201D and \u201CapiId\u201D fields to \u201CrequestContext\u201D\n\u2022 Changed value of \u201CPostman-Token\u201D header\n\u2022 Changed value of \u201CUser-Agent\u201D header\n\u2022 Changed value of \u201CX-Amz-Cf-Id\u201D header\n\u2022 Changed values of \u201CX-Forwarded-For\u201D and","\n\u2022 Added a new constructor for shipment option that takes packaging, item and fulfillmentCenter as arguments  \n\u2022 Added builder class to create concrete shipmentOption objects \n\u2022 Added and commented the equals method of shipment option class\ndifferentObject_returnsFalse() {\n+        \/\/ GIVEN\n+        Object other = new Object();\n+\n+        \/\/ WHEN\n+        boolean isEqual = shipmentOption.equals(other);\n+\n+        \/\/ THEN\n+        assertFalse(isEqual, \"A ShipmentOption is not equal with a different kind of object.\");\n+    }\n+\n+    @Test\n+    public void equals_differentItem_returnsFalse() {\n+        \/\/ GIVEN\n+        Object other = ShipmentOption.builder()\n+            .withPackaging(packaging)\n+            .withItem(otherItem)\n+            .withFulfillmentCenter(fulfillmentCenter)\n+            .build();\n+\n+        \/\/ WHEN\n+        boolean isEqual = shipmentOption.equals(other);\n+\n+        \/\/ THEN\n+        assertFalse(is","\n+    Added variable other\n+    Used assertEqual\n+    Checked if null\n+\n+        \/\/ Given\n+        Object other = null;\n+\n+        \/\/ WHEN\n+        boolean isEqual = shipmentCost.equals(other);\n+\n+        \/\/ THEN\n+        assertFalse(isEqual, \"A ShipmentCost is never equal with an instance of different class\");\n+    }\n+\n+    @Test\n+    public void equals_differentClass_returnsFalse() {\n+        \/\/ Given\n+        Object other = \"not a ShipmentCost\";\n+\n+        \/\/ WHEN\n+        boolean isEqual = shipmentCost.equals(other);\n+\n+        \/\/ THEN\n+        assertFalse(isEqual, \"A ShipmentCost is never equal with an instance of different class\");\n+    }\n+\n+    @Test\n+    public void equals_sameClassButDifferentData_returnsFalse() {\n+        \/\/ Given\n+        BigDecimal otherCost = BigDecimal.valueOf(9);\n+        FulfillmentCenter other","\n\u2022 Added a test class BoxTest\n\u2022 Added and edited tests canFitItem(), getMass()\n\u2022 Added BigDecimal constants packagingLength, packagingWidth, packagingHeight\n\u2022 Added setUp() method to BoxTest\n\u2022 Added constructor to Box class that takes three doubles\n\u2022 Added canFitItem() method to Box class\n\u2022 Added getMass() method to Box class","\n\n\u2022 Added field for small item\n\u2022 Added field for large item\n\u2022 Added field for existent fulfillment center\n\u2022 Added field for non-existent fulfillment center\n\u2022 Added field for ShipmentService\n\u2022 Added test for finding best shipment option with existent fulfillment center and item that can fit\n\u2022 Added test for finding best shipment option with existent fulfillment center but item cannot fit\n\u2022 Added test for finding best shipment option with non-existent fulfillment center and item that can fit\n\u2022 Added test for finding best shipment option with non-existent fulfillment center but item cannot fit","\n\n\u2022 Added class declaration\n\u2022 Added variables ind1, abe2, yow4, iad2, pdx1 and packages 10Cm, 20Cm, 40Cm and 60Cm \n\u2022 Added FcPackagingOptios: ind1_10Cm, abe2_20Cm, abe2_40Cm, yow4_10Cm, yow4_20Cm, yow4_60Cm, iad2_20Cm, pdx1_40Cm and pdx1_60Cm\n\u2022 Added method getFcPackagingOptions_get_returnAllOptions \n\u2022 Added assertEquals, assertTrue and String.format for result check","\n\u2022 Added PackagingDAOTest class to test PackagingDAO\n\u2022 Added findShipmentOptions_unknownFulfillmentCenter_throwsUnknownFulfillmentCenterException test to check for throwing exceptions when a fulfillment center is unknown\n\u2022 Added findShipmentOptions_packagingDoesntFit_throwsNoPackagingFitsItemException to check for throwing exceptions when the item cannot fit any packaging\n\u2022 Added findShipmentOptions_onePackagingAvailableAndFits_singlePackaging to test that a single packaging option is available for the item\n\u2022 Added findShipmentOptions_twoPackagingAvailableAndOneFits_singlePackaging to test that a single packaging option is available even when there is more than 1 option\n\u2022 Added findShipmentOptions_twoPackagingAvailableAndBothFit_twoPackagingOptions to test that when both packaging options fit, both are available\n\u2022 Removed checkForExistingShipment test\n\u2022 Removed createItemWithPredefinedExceededDimensions test\n\u2022 Removed findShipmentOptions_missingItemData_throwsMissingItemDataException test\n\u2022 Modified createItem to have 3 parameters instead of 4\n\u2022 Modified findShipmentOptions_one","\n\u2022 Added MonetaryCostStrategy class\n\u2022 Added BeforeEach to setup strategy \n\u2022 Added Test to getCost-corrugateMaterial-returnsCorrectCost\n\u2022 SetPackaging to BOX_10x10x20\n\u2022 Added ShipmentCost getCost comparison to 5.43 \n","\n\u2022 Added mock setup for ShipmentService \n\u2022 Added check for null ShipmentOption in test\n\u2022 Added ShipmentOption mocker for successful case in test\n\u2022 Updated activity argument for constructor\n\u2022 Added request builder for testing purposes \n\u2022 Replaced getters with builder for request object \n\u2022 Added ObjectMapper for testing purposes \n\u2022 Updated comment style in class\n\u2022 Added tests to check empty\/non-empty ShipmentOptionService\n\u2022 Updated packages to match source code format \n","\n\u2022 Added <Configuration> tag with parameter \"status=WARN\" \n\u2022 Added Appenders tag with Console appender and console element \n\u2022 Added PatternLayout to console element \n\u2022 Added Loggers and Root tag \n\u2022 Added AppenderRef element to reference the ConsoleLogger \n\u2022 Set level of Root to DEBUG","\n\u2022 Added Functional interface MapToPojoConverter \n\u2022 Added abstract method convert to MapToPojoConverter \n\u2022 Added parameter type T to MapToPojoConverter  \n\u2022 Added parameter map with type Map<String, String> to convert method \n\u2022 Added return type T to convert method \n","\n+ Added ShipmentOption class\n+ Added item, packaging, and fulfillmentCenter properties\n+ Added builder() method \n+ Added getItem(), getPackaging(), and getFulfillmentCenter() methods\n+ Added equals() and hashCode() methods\n- Removed ItemPackage class \n- Removed getFulfillment() and getPackagingOptions() methods \n- Removed shippingRate and packagingRate properties \n- Removed shippingCost()  method \n- Removed toString() method \n"," \n\u2022 Added \u201Cthis.cost = cost;\u201D to the ShipmentCost class\u2019s constructor \n\u2022 Add \u201Cboolean equals(Object o)\u201D method to ShipmentCost class \n\u2022 Use compareTo due to BigDecimal\u2019s equal\u2019s method not returning true if the scales of the BigDecimals are different \ndifferent.\n        return this.shipmentOption.equals(other.shipmentOption) && this.cost.compareTo(other.cost) == 0;\n    }\n+\n+    @Override\n+    public int hashCode() {\n+        return Objects.hash(this.shipmentOption, this.cost);\n+    }\n+\n+    \/**\n+     * Compares this ShipmentCost to another, first comparing the cost and then the ShipmentOption.\n+     * @param other The other ShipmentCost to compare to.\n+     * @return\n+     *\/\n+    public int compareTo(ShipmentCost other) {\n+        int costComp = this.cost.compareTo(other.cost);\n+        if","\n+ Added class Packaging\n+ Added field Material material\n+ Added abstract method canFitItem()\n+ Added abstract method getMass()\n- Removed constructor Material material\n","\n\n\u2022 Added Material enum \n\u2022 Added Material constants CORRUGATE\n","\n+ Added class Item \n+ Added private fields asin, description, length, width and height\n+ Added builder() and build() method\n+ Added getters for fields\n- Removed setters for fields\n- Removed constructor taking parameters directly \n"," \n\u2022 Added FulfillmentCenter class \n\u2022 Added fcCode attribute   \n\u2022 Added constructor that sets fcCode \n\u2022 Added getFcCode() method \n","\n\n\u2022 Added FcPackagingOption class with \n  - FulfillmentCenter and Packaging fields \n  - constructor with FulfillmentCenter and Packaging parameters\n  - get methods for FulfillmentCenter and Packaging fields \n"," \n\u2022 Added BigDecimal class variables for Box length, width, and height\n\u2022 Added constructor for Box\n\u2022 Added canFitItem method\n\u2022 Added getMass method\n\u2022 Added toString method","\n\u2022 Added CostStrategy parameter to ShipmentService constructor\n\u2022 Added costStrategy field to ShipmentService\n\u2022 Added getLowestCostShipmentOption() method to ShipmentService\n\u2022 Added applyCostStrategy() method to ShipmentService\n\u2022 Added anasin field to ShipmentService\n\u2022 Added exception handling to findShipmentOption() method\n\u2022 Added call to getLowestCostShipmentOption() to findShipmentOption() method\n\u2022 Added call to applyCostStrategy() to findShipmentOption() method","\n\n+ Added imports for PrepareShipmentRequest, PrepareShipmentResponse and ServiceProvider\n+ Implemented RequestHandler\n+ Added method to get ServiceProvider\n+ Added PrepareShipmentRequest to LambdaRequest to get query parameters\n+ Added call to PrepareShipmentActivity to handle Request\n+ Added Success and Error LambdaResponse \n- Removed log4j logger implementation \n- Removed try-catch implementation \n- Removed fcCode, itemAsin, itemHeight, itemLength and itemWidth as function parameters and properties","\n\u2022 Added static LambdaResponse success() method\n\u2022 Added static LambdaResponse notFound() method\n\u2022 Added static LambdaResponse error(String message) method\n\u2022 Added static LambdaResponse error(Exception e) method\n\u2022 Changed LambdaResponse constructor to private \n\u2022 Added ObjectMapper MAPPER to class as static field\n\u2022 Replaced hard-coded 200 and 404 status codes with references to class fields \n\u2022 Added try-catch block around MAPPER.writeValueAsString() \n\u2022 Added error message formatting to error() method","\n\n+ Added the class LambdaRequest which extends the APIGatewayProxyRequestEvent\n+ Added the fromBody method to deserialize a generic type from the body of the request\n+ Added the fromQuery method to create an instance from request query string\n+ Added the fromPath method to create an instance from request path parameters","\n\n+ Added UnknownFulfillmentCenterException class\n- Removed NonexistentFulfillmentCenterException class\n+ Added UnknownFulfillmentCenterException constructors: \n    - No args\n    - String message\n    - Throwable cause\n+ Added serialVersionUID constant\n- removed getMessage() method\n- removed printStackTrace() method\n- removed initCause() method\n- removed fillInStackTrace() method\n- removed getLocalizedMessage() method\n- removed getCause() method\n- removed setStackTrace() method\n- removed clone() method\n- removed toString() method\n- removed equals() method\n- removed hashCode() method","\n\u2022 Added class \u2018SustainabilityShipmentClientException\u2019 extending RuntimeException \n\u2022 Added constructor taking string message as argument \n\u2022 Added constructor taking string message and Throwable cause as argument \n","\n+ Added NoPackagingFitsItemException class to throw an exception when an Item is null or exceeds the size of all available packaging at its FC.\n+ Added constructor methods to NoPackagingFitsItemException. \n+ Added serialVersionUID to NoPackagingFitsItemException\n- Removed reference to EmailAlreadyExistException in constructor methods of NoPackagingFitsItemException class. \n","\n\u2022 Added PackagingDAO, PackagingDatastore, CostStrategy and ShipmentService fields \n\u2022 Added provideShipmentService(), providePackagingDAO(), provideCostStrategy(), providePackagingDatastore() methods \n\u2022 Added if statements for instantiating these fields in the respective methods\n\u2022 Added providePrepareShipmentActivity method with ShipmentService as parameter\n\u2022 Added Objects.isNull to check for null values in object fields in provideCostStrategy() and providePackagingDatastore() methods","\n\n\u2022 Added method createBoxFcPackagingOption(String fcCode, String length, String width, String height)\n\u2022 Added field fcPackagingOptions\n\u2022 Added initializer for field fcPackagingOptions with multiple FcPackagingOption objects \n\u2022 Added field FulfillmentCenter to FcPackagingOption class \n\u2022 Added field Packaging to FcPackagingOption class \n\u2022 Added field Box to Packaging class \n\u2022 Added fields length, width, height to Box class \n\u2022 Added getter method for field fcPackagingOptions in PackagingDatastore class \n\u2022 Changed type of box parameter in createBoxFcPackagingOption method from Box to String \n\u2022 Changed parameter order in createBoxFcPackagingOption method to alphabetical order \n\u2022 Changed type of parameters length, width, height in createBoxFcPackagingOption method from int to BigDecimal \n","\n\u2022 Added new PackagingDAO class\n\u2022 Added constructors to PackagingDAO taking PackagingDatastore as input\n\u2022 Added fcPackagingOptions List to PackagingDAO class\n\u2022 Added findShipmentOptions method to PackagingDAO class taking Item and FulfillmentCenter as inputs \n\u2022 Added data retrieval logic to PackagingDAO class\n\u2022 Added functionality to throw exceptions in PackagingDAO class when Fulfillment Center is unknown or no packaging fits item\n","  \n\u2022 Added map materialCostPerGram  \n\u2022 Added calculation using material cost per gram and LABOR_COST \n\u2022 Updated getCost() to accept ShipmentOption \n\u2022 Updated return value of getCost() to return ShipmentCost \n\u2022 Removed local cost variable \n","\n+Added CostStrategy interface\n+Added getCost() method to interface, which takes a ShipmentOption and returns a ShipmentCost \n-Removed default implementation of cost calculation\n-Removed setter method for cost calculation\n","\n\u2022 Added ShipmentOption shipmentOption variable \n\u2022 Added getShipmentOption() method\n\u2022 Added static Builder class with withShipmentOption() and build() methods to set and return a PrepareShipmentResponse object","\n\u2022 Added class fields: fcCode, itemAsin, itemDescription, itemLength, itemWidth, itemHeight \n\u2022 Added class constructor\n\u2022 Added getter methods for fields \n\u2022 Added builder class and associated fields, methods and build() method \n","\n\u2022 Added ShipmentService shipmentService\n\u2022 Added Item item\n\u2022 Added FulfillmentCenter fulfillmentCenter\n\u2022 Added ShipmentOption shipmentOption\n\u2022 Added method handleRequest with PrepareShipmentRequest, Item and FulfillmentCenter parameters\n\u2022 Added builder for PrepareShipmentResponse \n\u2022 Added withShipmentOption for PrepareShipmentResponse \n\u2022 Removed ObjectMapper \n\u2022 Removed BigDecimal from Item declarations \n","\n+ Added gradle plugin for Test Logger\n+ Added repository and credentials\n+ Added Guava, Dagger, Jackson, and AWS dependencies\n+ Added JUnit-Jupiter and Mockito for test implementation\n+ Customized Test task for JUnit Platform","\n\n+ Added a new shipping rate calculator that calculates cost based on package size and weight\n+ Added functionality to estimate shipping costs based on the zip code of the shipping address\n+ Changed the structure of the shipping rate calculator to accommodate new features\n+ Adjusted the requirements of the zip code input to only accept valid strings\n- Removed usage of a static shipping rate estimation class\n- Removed redundant code for setting an estimated delivery time","\n\n+    .idea  \n+    .aws-sam \n+    bin \n+    .project \n+    logs\n\n- Circle.css\n- DynamicLib.xcodeproj\n- circle.yml\n\n+ .gradle\n+ build","\n- Added line to set eol to crlf for *.bat files\n- Removed line setting eol to lf for *.py files","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 7e9a39cc657428f1eac34f69b72e24bb10b2a919":["\n\u2022 Added queryStringParameters object with parameters corresponding to the item\u2019s attributes \n\u2022 fcCode, itemAsin, itemDescription, itemLength, itemWidth, and itemHeight","\n\u2022 Added log errors if PackageDAO did not return any values\n\u2022 Added log errors if client gives Invalid inputs in PackageDAO\n\u2022 Threw SustainabilityShipmentServiceException if service could not locate suitable package\n\u2022 Threw SustainabilityShipmentClientException if Fulfillment Center could not be resolved","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 7d44be8df9938cadd4ab16c4377f71fc2cf0dcfc":["\n\u2022 Added ShipmentCost class\n\u2022 Added ShipmetOption class\n\u2022 Added ServiceProvider class\n\u2022 Added CarbonCostStrategy class\n\u2022 Added BlendedCostStrategy class\n\u2022 Added PackagingDAO class\n\u2022 Added PackagingDatastore class\n\u2022 Added Box class\n\u2022 Added Polybag class\n\u2022 Added FcPackagingOption class\n\u2022 Added FulfillmentCenter class\n\u2022 Added Item class\n\u2022 Added Material enum\n\u2022 Added Packaging abstract class\n\u2022 Added PrepareShipmentRequest class\n\u2022 Added PrepareShipmentResponse class\n\u2022 Removed fcCode property from PrepareShipmentRequest class\n\u2022 Removed shipmentService property from PrepareShipmentActivity class","\n\u2022 Added ind1_2000cc, ind1_5000cc, abe2_2000cc, abe2_6000cc, pdx1_5000cc, pdx1_10000cc, yow4_5000cc\n\u2022 Removed none","\n \n\u2022 Added FcPackagingOption for iad2_5000cc, yow4_2000cc, yow4_5000cc, yow4_10000cc, ind1_2000cc, ind1_5000cc, abe2_2000cc, abe2_6000cc, pdx1_5000cc and pdx1_10000cc\n\u2022 Removed FcPackagingOption for iad2_10000cc","\n-Removed line for package10000cc\n+Added lines for package5000cc, package6000cc and package10000cc","\n- Changed 'assertEquals' argument from 2 to 4 \n- Added comment to 'assertEquals' line","\n\u2022 Assertion changed from 1 to 3\n\u2022 Description of assertion updated","\n\/\/ Added builder method to support creating a weighted cost strategy with two sub strategies\n+    WeightedCostStrategy weightedCostStrategy = WeightedCostStrategy.Builder.builder()\n+        .withCarbonCostStrategy(carbonCostStrategy, BigDecimal.valueOf(.2))\n+        .withMonetaryCostStrategy(monetaryCostStrategy, BigDecimal.valueOf(.8))\n+            .build();\n+\n+\/\/ Added tests for calculating the correct cost for a box and a bag with both the Carbon and the Monetary cost strategies \n+    @Test\n+    void getCost_weightedCostStrategy_returnsCorrectWeightedCost() { ... }\n+\n+    @Test\n+    void getCost_corrugateMaterial_returnsCorrectMonetaryCost() { ... }\n+\n+    @Test\n+    void getCost_laminateMaterial_returnsCorrectMonetaryCost() { ... }\n+\n+    @Test\n+    void getCost_corrugateMaterial_returnsCorrectCarbonCost() { ... }\n+\n+    @Test\n+   ","\n\u2022 Added import statement for WeightedCostStrategy\n\u2022 No lines removed","\n- Replaced MonetaryCostStrategy with WeightedCostStrategy for costStrategy initialization.","\n\u2022 Added WeightedCostStrategy \n\u2022 Added PackagingDAO and PackagingDatastore \n\u2022 Added ShipmentService \n\u2022 Removed MonetaryCostStrategy \n\u2022 Removed PrepareShipmentActivity","\n\u2022 Added createBagFcPackagingOption(\"IAD2\", \"5000\") \n\u2022 Added createBagFcPackagingOption(\"YOW4\", \"2000\"), createBagFcPackagingOption(\"YOW4\", \"5000\"), createBagFcPackagingOption(\"YOW4\", \"10000\"), createBagFcPackagingOption(\"IND1\", \"2000\"), createBagFcPackagingOption(\"IND1\", \"5000\")\n\u2022 Added createBagFcPackagingOption(\"ABE2\", \"2000\"), createBagFcPackagingOption(\"ABE2\", \"6000\"), createBagFcPackagingOption(\"PDX1\", \"5000\") and createBagFcPackagingOption(\"PDX1\", \"10000\")\n\u2022 Removed createBagFcPackagingOption(\"IAD2\", \"10000\") \n\u2022 Added createBagFcPackagingOption(\"YOW4\", \"5000\")","\n\n\u2022 Added WeightedCostStrategy class to facilitate weighted cost calculation\n\u2022 Added Builder class to allow for flexibility in setting up cost strategies and weights\n\u2022 Added getCost() method which takes in shipmentOption object and returns shipmentCost\n\u2022 Added fields for monetaryCostStrategy, carbonCostStrategy, monetaryWeight and carbonWeight\n\u2022 Updated the build() method to set fields for the WeightedCostStrategy instance\n\u2022 Updated the withMonetaryCostStrategy and withCarbonCostStrategy methods to take in additional argument for weight \n\u2022 Deleted any redundant code or generic comments","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit da8ebebccec551aa06a6f27d13ea271f59145574":["\n\u2022 Replaced getProvider() with getDagger()\n\u2022 Changed call to getProvider() to call getDagger()\n\u2022 Added DaggerServiceComponent.create()","\n- Changed ServiceProvider to ServiceComponent\n- Removed provider initialization","\n\u2022 Added DaggerServiceComponent, ServiceComponent and PrepareShipmentRequest classes\n\u2022 Removed PrepareShipmentActivity, ServiceProvider and logger classes","\n- Removed provideCostStrategy() \n- Removed PackagingDatastore \n- Removed PackagingDAO\n- Removed ShipmentService \n- Updated providePrepareShipmentActivity() to accept a new parameter\n+ Added Dagger for dependency injection","\n\u2022 Added CostStrategy and PackagingDatastore provide methods \n\u2022 Removed CostStrategy and PackagingDatastore provide methods","\n\u2022 Added BigDecimal constants for Monetary and Carbon weights\n\u2022 Added MonetaryCostStrategy and CarbonCostStrategy to provider method \n\u2022 Built WeightedCostStrategy with Monetary and Carbon Cost Strategies","\n\u2022 Added constructor with argument.\n\u2022 Added carbonWeight variable.","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 363217660f0cd12512f1a2a9bf3ac2e96e733012":["\n\u2022 Added ShipmentService, MonetaryCostStrategy, PackagingDAO, PackagingDatastore, FcPackagingOptions and ShipmentCost classes\n\u2022 Added handleRequest() and getShipmentOption() methods\n\u2022 Added LABOR_COST member, materialCostPerGram map, createBoxFcPackagingOption() method and getLowestCostShipmentOption() method\n\u2022 Added getCost() method \n\u2022 Added getFcPackagingOptions() method \n\u2022 Added NoPackagingFItsItemException, SustainabilityShipmentClientException and UnknownFulfillmentCenterException exceptions\n\u2022 Added Box and Item classes\n\u2022 Added Material enum\n\u2022 Added Packaging abstract class\n\u2022 Added ShipmentOption class\n\u2022 Changed PrepareShipmentRequest to accept FulfillmentCenter and Item objects","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 09ca82e8764f924261146d51b00700dc6b5c3f10":["\n\u2022 Added call to shipmentService.findShipmentOption with existingFC, and assigned result to variable \n\u2022 Removed assertThrows to throw NoPackagingFitsItemException \n\u2022 Assert that result.getPackaging() is null","\n- Log error when PackageDAO does not return any values\n- Throw SustainabilityShipmentServiceException\n+ Log error when PackageDAO does not return any relevant values for packaging       \n+ Return ShipmentOption with empty Packaging \n- Throw SustainabilityShipmentClientException\n+ No changes","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit aa8bf43b3e03724efc6297278c2ee1c1d045ece1":["\n\u2022 Removed lines that checked if a shipment option exists when fulfilled by a nonexistent fulfillment center\n\u2022 Added lines that throw a SustainabilityShipmentClientException when asked to ship from an unknown fulfillment center\n\u2022 Added lines that throw a SustainabilityShipmentServiceException when no packaging can fit the item \n\u2022 Changed existing code to check if a shipment option exists when fulfilled by an existent fulfillment center","\n- Removed assertNull()\n- Added assertEquals()\n- Added assertThrows()","\n\u2022 Added exceptions: NoPackagingFitsItemException, SustainabilityShipmentClientException, SustainabilityShipmentServiceException, UnknownFulfillmentCenterException\n\u2022 Removed a line","\n\u2022 Caught NoPackagingFitsItemException and throw SustainabilityShipmentServiceException\n\u2022 Caught UnknownFulfillmentCenterException and throw SustainabilityShipmentClientException","\n\u2022 Added lines for NoPackagingFitsItemException, SustainabilityShipmentClientException, SustainabilityShipmentServiceException, and UnknownFulfillmentCenterException.\n\u2022 Removed line for CostStrategy.","\n\n- Deleted previous constructor \n+ Added new constructor: SustainabilityShipmentServiceException(String message, Throwable cause) \n+ Added new constructor: SustainabilityShipmentServiceException(String message) \n+ Added calls to constructor from new constructor, passing arguments from parameter to super call.\n","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 8f189c1285e300a6565e5113ab37a6fb8d51f048":["\n\u2022 Added \"queryStirngParameters\" section with the parameters \"fcCode\", \"itemAsin\", \"itemDescription\", \"itemLength\", \"itemWidth\", and \"itemHeight\".","\n\n\u2022 Added Builder() constructor \n\u2022 Added Setter method to set asin and returns a reference to this builder","\n- Removed height field\n+ Added toString() method","\n- Added getter method to retrieve fcCode\n- Overrode toString() method to return fcCode","\n\u2022 Added method:  getShipmentCosts(String startLocation, String endLocation)\n\u2022 Removed variable: shipmentCosts"," \n\u2022 Added log.info() to log item and FulfillmentCenter details.\n\u2022 Removed null check for item's asin.","\n\u2022 Added Logger instance \n\u2022 Initialized CostStrategy instance","\n\n- Removed import type of javax.ws.rs.core.Response\n+ Added import Logger type from org.apache.logging.log4j.core\n  + Added declare Logger instance as LogManager.getLogger"," \n\u2022 Added parameter \"itemDescription\" to PrepareShipmentRequest \n\u2022 Removed parameters from PrepareShipmentRequest","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 5f5e226d64e0b433be2d8a99acb01e0ca18d65c3":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 0fea1664f004ecfe1ce179a40e7d0ad6abb083ae":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit e9399c8f3d26a3622b0b106e54271da30215e767":["\n- Added code to create a HashMap\n- Refactored if statment to check for fulfillment center before checking packaging\n- Removed code to check if fulfillment centers and packaging are equal\n- Removed code to remove element at index j if i+1 = j"," \n- Removed List<Packaging> type\n+ Added Map<FulfillmentCenter, List<Packaging>> type","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit de1023181d50e41eb75223915463bb9435be31a1":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 257404d1cdf2e7e2157cbda3efb2f10fa81483c6":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 6b78c3deee1a360f2602c18ca7d02ce1fe502852":["\n\u2022 Added ShipmentService class \n\u2022 Added method 'calculateShipmentCosts' \n\u2022 Added variable 'anasin'","\n- Removed line comparing item ASIN to anasin\n+ Added comment about anasin being for testing","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 21d20fb5cb915e51a933b290ddf8037387cdff24":["\n- Added relationship Polybag <|-- Packaging\n- Added relationship Polybag <|-- Material\n- Removed ShipmentCost o-- ShipmentOption","\n\u2022 Added new enum material option: LAMINATED_PLASTIC\n\u2022 Removed the material from Packaging","\n\u2022 Added canFitItem() and getMass() to Box\n\u2022 Removed volume property from Polybag\n\u2022 Added FcPackagingOption with fulfillmentCenter and packaging properties","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit d323c593c7f3c24e72214fdd80c8b0ad84e477bc":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 1e4ded891bf55ada359993d507d4f9480c8bd77a":["DIFF ERRORS = 0","SERVICE ERRORS = 0"]}