{"commit 59fd8b889af6ee0fdc62231f47abd68b6dfae973":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit b6f8825c02bf29b84f258aa28f5dcfa301ffae6f":["\n- Removed list of FcPackagingOptions \n+ Added Map of FulfillmentCenters and Packaging","\n\u2022 Added code to instantiate packagingMap with values from fcPackagingOptions\n\u2022 getFulfillmentCenter() and getPackaging() methods called to populate map","\n\u2022 Replaced iteration through FcPackagingOption with an iteration through all fulfillment centers in packaging map\n\u2022 Added check to verify the fulfillmentCenter code in packaging map \n\u2022 Removed assignment of FcPackagingOption to a Packaging object"," \n-Removed Map initialization\n-Removed two for loops\n-Added HashMap initialization with empty argument","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 24b367113da9fa23d4133b58b9016d355a973cec":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"totalNumberOfCommits":["30"],"commit dce9de6dcf62f500cd1789743020064da844aead":["\n\n\u2022 Added a javax.inject.Inject annotation on a line.","\n\u2022 Injected a ShipmentService into the PrepareShipmentActivity constructor.","\n\n-Removed package import\n+Injected javax.inject package","\n\u2022 Added @Inject annotation \n\u2022 Added parameter to the PackagingDAO constructor \n\u2022 Added a call to the PackagingDataStore getFcPackagingOptions()","\n\u2022 Added @Inject and @Singleton annotations\n\u2022 Removed empty line","\n\n\u2022 Added @Inject annotation \n\u2022 Added createBoxFcPackagingOption method","\n\u2022 Added @Module annotation\n\u2022 Added provideCostStrategy() function which returns a new WeightedCostStrategy instance \n\u2022 Removed comment lines and whitespace\n","\n\n- Remove CostStrategy and PackagingDataStore from ServiceComponent \n+ Add provideShipmentService and providePrepareShipmentActivity to ServiceComponent \n+ Add providePackagingDAO to ServiceComponent","\n+ Added imports for PrepareShipmentActivity, ServiceComponent, and ServiceProvider.\n+ Added a field to inject the PrepareShipmentActivity.\n+ Added code to instantiate the ServiceComponent and set the preparedShipmentActivity.\n- Removed code to instantiate the PrepareShipmentActivity.","\n\n- Removed getProvider() method\n+ Added DaggerServiceComponent for ServiceComponent \n+ Added getProvider() method to return DaggerServiceComponent","\n- Removed line assigning Logger variable\n+ Added line with Inject annotation","\n- Inject annotation added to the public ShipmentService() constructor \n- Constructor parameters: PackagingDAO, CostStrategy.","\n\n\u2022 Added CostStrategy provideCostStrategy(); \n\u2022 Added PackagingDatastore providePackagingDatastore();\n\u2022 Added PackagingDAO providePackagingDAO();\n\u2022 Added ShipmentService provideShipmentService();\n\u2022 Added PrepareShipmentActivity providePrepareShipmentActivity();\n\u2022 Added ShipmentService inject PackagingDao;\n\u2022 Added ShipmentService inject PackagingDataStore (@singletin);\n\u2022 Added ShipmentService inject WeightedCostStrategy;\n\u2022 Added ShipmentService inject CarbonCostStrategy; \n\u2022 Added ShipmentService inject MonetaryCostStrategy; \n\u2022 Removed inject PrepareShipmentActivity;","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit bd7de00112e8b4276051e7cf8724704b711779a0":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit c42fb5e5b41f8765a8416d93d62262c5d10627a3":["\n\u2022 Replaced ArrayLists and HashMaps with ArrayLists \n\u2022 Removed unused imports\n\u2022 Added List and Map imports"," \n- Remove mapping from FulfillmentCenter to single Packaging option \n- Add mapping from FulfillmentCenter to Set of Packaging options \n- Create Set if one doesn't exist for FulfillmentCenter \n- Add Packaging to corresponding Set","\n\u2022 Added an inner for loop to check for packaging for the provided item \n\u2022 Removed a for loop to check for fulfillment center \n\u2022 Removed a check that throws an error if the fulfillment center is not found \n\u2022 Added a check that throws an error if there is no packaging fits the provided item \n\u2022 Changed the condition of the if blocks in the first for loop","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 0dcdc744c755432d20c6a20c660d6c5255828706":[" \n\u2022 Added CostStrategy, ShipmentService and PrepareShipmentActivity classes \n\u2022 Added getShipmentOption(), applyCostStrategy() and findShipmentOption() methods \n\u2022 Added FC as an output of PrepareShipmentActivity class","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 0442a4a21bea0d6655da26874f8aa90b8970d4b1":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 286cee60aa75349c3a61077aa062131c2b1a2745":["\n- Check if the requested FulfillmentCenter exists\n- Check all FcPackagingOptions for a suitable Packaging\n- Retrieve the possible Packaging from the map\n- Add fitting Packaging to the result list"," \n\u2022 Added code to throw an exception if the result is empty \n\u2022 Removed unnecessary loop","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 42dcca94ee729bc0552c0b0ac22a9d918196d467":["\n\u2022 Added imports for Box, FcPackagingOption, FulfillmentCenter, and Packaging\n\u2022 Removed imports for Box, FcPackagingOption, FulfillmentCenter, and Packaging","\n\u2022 Added createBagFcPackagingOption(\"IAD2\", \"2000\"),\n\u2022 Added createBagFcPackagingOption(\"IAD2\", \"10000\"),\n\u2022 Removed createBoxFcPackagingOption(\"PDX1\", \"60\", \"60\", \"60\")","\n\u2022 Added createBagFcPackagingOption() method, to create a FcPackagingOption with a FulfillmentCenter and a Polybag Packaging object.","\n- Removed CORRUGATE \n+ Added LAMINATED_PLASTIC","\n\u2022 Added Polybag class\n\u2022 Added volume parameter to Polybag constructor\n\u2022 Implemented canFitItem method\n\u2022 Added getMass method\n\u2022 Updated toString method\n\u2022 Added equals and hashCode methods \n","SERVICE_ERROR_CAUSE: commit 42dcca94ee729bc0552c0b0ac22a9d918196d467:retrofit2.adapter.rxjava2.HttpException: HTTP 429 ","SERVICE_ERROR_CAUSE: commit 42dcca94ee729bc0552c0b0ac22a9d918196d467:retrofit2.adapter.rxjava2.HttpException: HTTP 429 ","\n\u2022 Added packages 2000cc and 10000cc\n\u2022 Added FcPackagingOption objects ind1_10Cm and abe2_20Cm and abe2_40Cm","\n\u2022 Added FcPackagingOption iad2_2000cc and iad2_10000cc.","\n\u2022 Added: iad2_2000cc, iad2_ 10000cc\n\u2022 Removed: none","\n+Added canFitItem, getMass and equals methods\n+Added setUp method\n+Added volume2 and itemVolume fields\n+Added itemLength, itemWidth, itemHeight fields\n-Removed extra \"import java.math\" statement\n-Removed extra \"BigDecimal volume= BigDecimal.valueOf(2000);\" statement","DIFF ERRORS = 1","SERVICE ERRORS = 0"],"commit ffa32d6384459806583798b3a14ca7445104821f":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit e13fff02722d6b875c519f0947033d8184aa75f9":["SERVICE_ERROR_CAUSE: commit e13fff02722d6b875c519f0947033d8184aa75f9:retrofit2.adapter.rxjava2.HttpException: HTTP 429 ","SERVICE_ERROR_CAUSE: commit e13fff02722d6b875c519f0947033d8184aa75f9:retrofit2.adapter.rxjava2.HttpException: HTTP 429 "," \n\u2022 Added if statement to check if fcCode matches fulfillmentCenter's fcCode\n\u2022 Added ShipmentOption object to result if items fit in packaging\n\u2022 Removed duplicates in result by comparing FulfillmentCenter and Packaging between elements of the result List.","\n- Objects import added\n- equals, hashCode, and toString methods overridden","\n-Removed constructor \n+Added equals and hashCode methods","\n\u2022 Added \u2018import java.util.Objects\u2019\n\u2022 Changed class javadoc comment","\n\u2022 Added equals() and hashCode() methods","\n- Removed BigDecimal attribute\n+ Added Objects import\n+ Added hashCode and equals methods","\n- Removed abstract modifier\n+ Added equals and hashCode methods","\n\u2022 Added import: com.nashss.se.sustainabilityshipmentservice.types.FcPackagingOption\n\u2022 Added local variable: FcPackagingOption\n\u2022 Added method call to findValidPackagingOption: findValidPackagingOption(FulfillmentCenter fulfillmentCenter, Item item)","\n\u2022 Added \"PDX1\" FulfillmentCenter \n\u2022 Removed empty line","\n\u2022 Added a test to check for multiple copies of the same material\n\u2022 Updated assertEquals statement to check list size","\n\n- Added two new tests to check if boxes have equal values in the equals method \n- Returns true when the boxes have equal values\n- Returns false when the boxes have different values","DIFF ERRORS = 1","SERVICE ERRORS = 0"],"commit 686133170bd9756594deea6b4c16f757e5ef1666":[" \n\u2022 Added class CarbonCostStrategy which implements CostStrategy \n\u2022 Added constructor which instantiates a Map of Material enums and BigDecimals \n\u2022 Added method getCost which returns a Shipmentcost  and takes a ShipmentOption as a parameter \n\u2022 GetCost method multiplies the Packaging\u2019s mass by the corresponding material cost in the Map created in the constructor \n"," \n\u2022 Added entry to materialCostPerGram HashMap with mapping of Material.LAMINATED_PLASTIC to BigDecimal.valueOf(.25).","\n\n- Imported com.nashss.se.sustainabilityshipmentservice.types\n+ Imported org.junit.jupiter.api.*\n+ Imported java.math.BigDecimal\n+ Added setUp method\n+ Added CarbonCostStrategy test class\n+ Added two tests for respective material types\n+ Removed comments about what the code does. \n §§ --- README.md\n-# SE_SustainabilityShipmentService\n-Spiral 3 Group 4 - Sustainability Shipment Service\n §§ 1000\n+# SE CompSci Sustainability Shipment Service\n+\n+This project is the implementation of a sustainable shipping service algorithm. The goal of this project is to improve and automate the process of finding the most ecologically responsible shipping option based on price, carbon dioxide emissions, and environmental friendliness. The project will include a UI component and an API component. \n+\n+### Contributors\n+\n+- Luke Kljucaric\n+- David Wong\n+- Bereket Tenkir\n+- Toblez Isaac\n","\n- Added import for: Box, Packaging, ShipmentCost, ShipmentOption\n- Removed import for: Box","\n\n- Removed Box(BigDecimal.valueOf(10), BigDecimal.valueOf(10), BigDecimal.valueOf(20));\n+ Added Polybag(BigDecimal.valueOf(10000));","\n\n- Removed previous assertion\n+ Added assertion to test cost calculation for bag with 10000cc \n","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit\n---\n .gitattributes":[" \n\u2022 Added *.bat text eol=crlf line \n\u2022 Commented on line endings  \n\u2022 Communicated changes in bullet points. \n","\n\u2022 Added line: \".gradle\"\n\u2022 Added line: \"build\"\n\u2022 Added line: \".idea\"\n\u2022 Added line: \".aws-sam\"\n\u2022 Added line: \"bin\"\n\u2022 Added line: \".project\"\n\u2022 Added line: \"logs\"","\n\u2022 Added a check for the ship-type being passed in createShipment and updated existing conditions for validating shipment address. \n\u2022 Removed shipDate parameter from createShipment, and added conditionals for binding values to UTC datetime. \n\u2022 Added function getOngoingShipments and modified parameters names to include ship-type and status. \n\u2022 Refactored if statements in the block of code in getShipmentRoute to break out condition checking in different functions. \n\u2022 Added validation on shipment weight in getShipmentRoute, and removed condition check for route existence. \n\u2022 Added hardcoded ship status to the end of the createShipment function.","\n\u2022 Added plugins for java-library and com.adarshr.test-logger \n\u2022 Added maven repository with credentials \n\u2022 Added dependencies for test-infrastructure, nss-resources, lesson-plan-resources, tct-introspection, commons,-text,  log4j-core, guava, dagger and jackson libraries\n\u2022 Added annotation processor \n\u2022 Added AWS lambda dependencies\n\u2022 Added testImplementation for junit-jupiter and mockito-junitjupiter\n\u2022 Configured tasks to use JUnit Platform \n","\n\n+ Added imports for Item, FulfillmentCenter, ShipmentOption, BigDecimal and ObjectMapper\n+ Added a private field, shipmentService\n+ Added a constructor\n+ Added a handleRequest() method\n+ Added a builder() in PrepareShipmentResponse\n","\n\u2022 Added fields: fcCode, itemAsin, itemDescription, itemLength, itemWidth, itemHeight \n\u2022 Added Builder class \n\u2022 Added with methods to set fields \n\u2022 Added build to build PrepareShipmentRequest \n\u2022 Added Getter methods for fields \n\u2022 Added Constructor for PrepareShipmentRequest \n\u2022 Added static builder() method \n","\n\n-Removed all existing code\n+Added ShipmentOption shipmentOption\n+Added getShipmentOption()\n+Added builder()\n+Added Builder class\n+Added Builder withShipmentOption(ShipmentOption shipmentOption)\n+Added Builder build()"," \n-Added CostStrategy interface\n+Added getCost method which takes argument of type ShipmentOption and returns ShipmentCost \n","\n\u2022 Added MonetaryCostStrategy class, which implements CostStrategy\n\u2022 Added constructor to MonetaryCostStrategy which initializes a HashMap of Material\/BigDecimal pairs\n\u2022 Added getCost method which calculates cost based on cost per gram of material and labor cost\n\u2022 Updated comments","\n+Added PackageDAO class \n+Added List FcPackagingOptions\n+Added Constructor which takes PackagingDatastore as parameter\n+Added findShipmentOptions() method which takes Item and FulfillmentCenter as parameters\n-Removed unused imports\n-Removed unused fields\n-Removed unused methods\n-Removed unnecesary comments\n","\n\u2022 Added a PackagingDatastore constructor\n\u2022 Added 10 FcPackagingOption objects in the fcPackagingOptions list \n\u2022 Added createBoxFcPackagingOption method \n\u2022 Added getFcPackagingOptions method \n\u2022 Removed unused imports. \n","\n\u2022 Added providePrepareShipmentActivity() \n\u2022 Added provideShipmentService()\n\u2022 Added providePackagingDAO() \n\u2022 Added provideCostStrategy()\n\u2022 Added providePackagingDatastore() \n\u2022 Removed unused constructors \n\u2022 Made fields private \n\u2022 Made constructors no-args \n\u2022 Changed constructor of PrepareShipmentActivity to accept only provideShipmentService() method  \n\u2022 Changed PackagingDAO constructor to accept only providePackagingDatastore() method  \n\u2022 Added packages imports \n\u2022 Added Objects.isNull() to check for null costStrategy and packagingDatastore instances\n\u2022 Changed to singleton pattern\n"," \n+ Added Package Declaration\n+ Added Class Declaration\n+ Added No-Argument Constructor\n+ Added Constructor with Message\n+ Added Constructor with Cause\n+ Added Constructor with Message and Cause\n- Removed Serial Version UID Declaration\n","\n\u2022 Added class SustainabilityShipmentClientException that extends RuntimeException\n\u2022 Added constructors: SustainabilityShipmentClientException(String message, Throwable cause) and SustainabilityShipmentClientException(String message) \n §§ COM\nUpdate Summarize the changes to the above code.\nThe lines in the above code starting with + are additions to the code.\nThe lines in the above code starting with - are lines removed from the code.\nUse Bullet points to communicate changes, being as clear and brief as possible.\n\n\u2022 Added class SustainabilityShipmentClientException that extends RuntimeException\n\u2022 Added constructors: SustainabilityShipmentClientException(String message, Throwable cause) and SustainabilityShipmentClientException(String message) \n"," \n+Added UnknownFulfillmentCenterException class \n+Added serialVersionUID\n+Added four overloaded constructors \n-Removed extra whitespace \n-Removed unused imports \n","\n\u2022 Added method fromBody(...) to deserialize a T from the request body\n\u2022 Added method fromQuery(...) to create an instance of T from the request's query string\n\u2022 Added method fromPath(...) to create an instance of T from the request's path parameters\n\u2022 Added an ObjectMapper to map the request body to the requestClass\n\u2022 Added error handling to throw a runtime exception if the requestClass cannot be deserialized from the request body \n","\n\u2022 Added a new LambdaResponse class that extends from APIGatewayProxyResponseEvent \n\u2022 Added a success method to create a LambdaResponse with a body\n\u2022 Added a success method to create a LambdaResponse without a body\n\u2022 Added a notFound method to create a response with a 404 status code \n\u2022 Added an error method to create a LambdaResponse based on a given message\n\u2022 Added an error method to create a LambdaResponse based on a given exception"," Lines with # sign are comments not meant to be changed\n\n\u2022 Added imports for LambdaRequest and LambdaResponse classes \n\u2022 Implemented RequestHandler interface \n\u2022 Added ServiceProvider field \n\u2022 Added handleRequest and getProvider methods \n\u2022 Updated import statements \n\u2022 Updated LambdaRequest and LambdaResponse types \n\u2022 Updated PrepareShipmentRequest and PrepareShipmentResponse references \n\u2022 Updated query parameter references","\n\n\u2022 Added constructor taking PackagingDAO and CostStrategy \n\u2022 Added findShipmentOption method taking item and fulfillment center as parameters \n\u2022 Added getLowestCostShipmentOption and applyCostStrategy methods \n\u2022 Added anasin string","\n\n+ Added a Box class\n+ Added fields length, width, and height (all BigDecimal)\n+ Added a constructor to create a Box object\n+ Added getters for each field\n+ Added canFitItem() method based on item's dimensions\n+ Added getMass() method to calculate the mass of the box\n+ Added toString() method \n- Removed unnecessary static keyword\n","\n- FcPackagingOption class added \n+ FulfillmentCenter field added\n+ Packaging field added \n+ FcPackagingOption constructor added \n+ getFulfillmentCenter and getPackaging methods added \n","\n+ Added FulfillmentCenter class\n+ Added fcCode member field \n+ Added constructor to initialize fields \n+ Added getFcCode method \n","\n\n+ Added BigDecimal variables for length, width and height\n+ Added Builder inner class for constructing an Item object\n+ Added getter methods to access the item's unique identifier, description, length, width, and height\n- Removed private modifiers from the class variables\n- Removed setter methods for the item's unique identifier, description, length, width, and height \n","\n\u2022 Added enum Material\n\u2022 Added CORRUGATE option to enum Material\n","\n+ Added class Packaging  \n+ Added variable material  \n+ Added constructors  \n+ Added method canFitItem  \n+ Added method getMass  \n- Removed variable color  \n- Removed method toString \n","\n\u2022 Added a constructor to initialize a ShipmentCost Object \n\u2022 Added a getter for shipmentOption \n\u2022 Added a getter for cost \n\u2022 Overrode the equals method for ShipmentCost object \n\u2022 Implemented compareTo method to compare BigDecimal's \nreturn different.\n        return shipmentOption.equals(other.shipmentOption) && cost.compareTo(other.cost) == 0;\n    }\n\n    @Override\n    public int hashCode() {\n        return Objects.hash(shipmentOption, cost);\n    }\n\n    @Override\n    public int compareTo(ShipmentCost other) {\n+        if (shipmentOption.equals(other.shipmentOption)) {\n+            return cost.compareTo(other.cost);\n+        }\n+        return shipmentOption.compareTo(other.shipmentOption);\n    }\n}\n","\n\n+ Added ShipmentOption class\n+ Added Item, Packaging, and FulfillmentCenter fields\n+ Added setter and getter methods for fields\n+ Added a builder class for constructing a ShipmentOption\n+ Added equals and hashCode methods\n+ Added a static builder method for creating a ShipmentOption builder\n","\n\n+ Added MapToPojoConverter<T> functional interface\n+ Declared convert method to convert map into type of T\n- Removed redundant comments\n+ Added Comments to summarise code changes. \n","\n\n- Removed PatternLayout element\n+ Added PatternLayout element with content: \"%d{DATE} [%-5p] %X{AWSRequestId} (%t) %C:%L: %m%n\"\n+ Added AppenderRef element with attribute ref=\"ConsoleLogger\"  to Root element","\n\u2022 Added PrepareShipmentRequest class with required fields\n\u2022 Added new field ItemLength, ItemWidth and ItemHeight to PrepareShipmentRequest class \n\u2022 Added ObjectMapper and ShipmentService components \n\u2022 Added test cases to check if the returned value is null when there is no ShipMentOption option available \n\u2022 Added test cases to check if the response returns a non-empty ShipMentOption when it is available \n","\n\u2022 Added package declaration \n\u2022 Added imports \n\u2022 Added class MonetaryCostStrategyTest \n\u2022 Added BeforeEach setUp() method\n\u2022 Added test getCost_corrugateMaterial_returnsCorrectCost() \n\u2022 Added ShipmentOption withPackaging with a Box 10x10x20 \n\u2022 Added ShipmentCost to determine cost \n\u2022 Added assertion to compare BigDecimal 5.43 to shipmentCost.getCost() \n","\n\u2022 Added tests to check for when the fulfillment center is unknown or when the item doesn't fit into any of the packaging options \n\u2022 Changed PackagingDAO constructor to take in a PackagingDatastore object\n\u2022 Added PackagingDatastore object to create a PackagingDAO \n\u2022 Added method to create a Item object\n\u2022 Added asserts to test for the amounts and types of shipment options returned \n","\n\u2022 Added test method getFcPackagingOptions_get_returnAllOptions \n\u2022 Defined new variables for packages and FcPackagingOptions \n\u2022 Added assertEquals and assertTrue statements \n\u2022 Removed a line of code that was commented out.\n §§.\n","\n\n+ Added import statements for MonetaryCostStrategy, PackagingDAO, and PackagingDatastore\n+ Added FulfillmentCenter existentFC and nonExistentFC\n+ Added ShipmentService instance variable\n+ Added four tests to findBestShipmentOption() method with different parameters\n- Removed variable smallItem","\n\u2022 Added line to define BigDecimal packagingLength\n\u2022 Added line to define BigDecimal packagingWidth\n\u2022 Added line to define BigDecimal packagingHeight\n\u2022 Added line to define Box box\n\u2022 Modified methods to support new parameters\n\u2022 Added new method canFitItem_itemSameSizeAsBox_doesNotFit\n\u2022 Added new method canFitItem_itemSmallerThanBox_doesFit\n\u2022 Added new method getMass_calculatesMass_returnsCorrectMass","\n\u2022 Added a parameter to showShipmentCost\n\u2022 Changed name of showShipmentOptionPrice method to showShipmentCost\n\u2022 Added calculation to include Packaging cost as well as Fulfilment Center cost\ndifferentClass_returnsFalse() {\n+        \/\/ GIVEN\n+        Object other = BigDecimal.ZERO;\n\n-\n\n\/\/        Object other = ShipmentCost.builder().withFulfillmentCenter(FC).withPackaging(PACKAGING).withCost(BigDecimal.ZERO).build();\n\n\/\/ WHEN\n        boolean isEqual = shipmentCost.equals(other);\n\n\/\/ THEN\n        assertFalse(isEqual, \"A ShipmentCost is not equal with a different class object.\");\n    }\n\n    @Test\n    public void equals_sameCostAndPackagingButDifferentFC_returnsFalse() {\n+        \/\/ GIVEN\n+        Object other = ShipmentCost.builder().withFulfillmentCenter(new FulfillmentCenter(\"LA456\")).withPackaging(PACKAGING).withCost(COST).build();\n\n","\n\u2022 Added when the \u2018==\u2019 operator is used\n\u2022 Removed the check for the instanceof String\n\u2022 Switched to the \u2018equals()\u2019 method\n\u2022 Added a check for nulldifferentObjectType_returnsFalse() {\n+        \/\/ GIVEN\n+        Object other = new Object();\n\n+        \/\/ WHEN\n+        boolean isEqual = shipmentOption.equals(other);\n\n+        \/\/ THEN\n+        assertFalse(isEqual, \"A ShipmentOption is not equal with a different object type.\");\n+    }\n+\n+    @Test\n+    public void equals_differentItem_returnsFalse() {\n+        \/\/ GIVEN\n+        ShipmentOption other = ShipmentOption.builder()\n+                .withItem(otherItem)\n+                .withFulfillmentCenter(fulfillmentCenter)\n+                .withPackaging(packaging)\n+                .build();\n+\n+        \/\/ WHEN\n+        boolean isEqual = shipmentOption.equals(other);\n+\n+        \/\/ THEN\n+        assertFalse(isE","\n\u2022 Added \u201Cheaders\u201D property for header information \n\u2022 Added \u201CrequestContext\u201D property for request information \n\u2022 Added \u201CisBase64Encoded\u201D property for indicating if the body is Base64 encoded\n\u2022 Removed \"pathParameters\" property","\n- Added queryStringParameters object with fcCode, itemAsin, itemDescription, itemLength, itemWidth and itemHeight\n- Removed \"\\ No newline at end of file\" from the end of the code","\n- Added \"fcCode\", \"itemAsin\", \"itemDescription\", \"itemLength\", \"itemWidth\", and \"itemHeight\" parameters to the \"queryStringParameters\" object\n- Removed any other properties","\n\u2022 Added \"distributionBase=GRADLE_USER_HOME\" \n\u2022 Added \"distributionPath=wrapper\/dists\"\n\u2022 Added \"distributionUrl=https\\:\/\/services.gradle.org\/distributions\/gradle-7.4.2-bin.zip\"\n\u2022 Added \"zipStoreBase=GRADLE_USER_HOME\"\n\u2022 Added \"zipStorePath=wrapper\/dists\"","ERROR: Prompt size to large to complete request for file in:  commit\n---\n .gitattributes","\n\u2022 Added Apache license comment at the top of the file\n\u2022 Changed @echo off to @if \"%DEBUG%\" == \"\" @echo off\n\u2022 Changed set DIRNAME=. if \"%DIRNAME%\" == \"\" set DIRNAME=.\n\u2022 Added DEFAULT_JVM_OPTS=\"-Xmx64m\" \"-Xms64m\"\n\u2022 Changed if defined JAVA_HOME goto findJavaFromJavaHome\n\u2022 Changed if exist \"%JAVA_EXE%\" goto execute\n\u2022 Added set CLASSPATH=%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar\n\u2022 Added if  not \"\" == \"%GRADLE_EXIT_CONSOLE%\" exit 1\n\u2022 Added exit \/b 1\n\u2022 Changed if \"%OS%\"==\"Windows_NT\" endlocal","\n\u2022 Added script to invoke 'sam local' functions \n\u2022 Added function to die if empty\n\u2022 Added function to parse args \n\u2022 Added function to ensure log dir \n\u2022 Added function to run sam local invoke \n\u2022 Added log directory\n\u2022 Added event and debug variables \n\u2022 Removed unnecessary messages"," \n\u2022 Added references for SustainabilityShipmentServiceLambda, SustainabilityShipmentServiceTCTs, list, and utilities \n\u2022 Changed rootProject.name to u2-SustainabilityShipmentService","\n\u2022 Added 'title Sustainable Shipment Service Sequence Diagram'\n\u2022 Added actors FC and participants PrepareShipmentActivity, ShipmentService, CostStrategy, PackagingDAO and Packaging\n\u2022 Added line 'FC -> PrepareShipmentActivity : handleRequest(PrepareShipmentRequest)'\n\u2022 Added line 'PrepareShipmentActivity -> ShipmentService: findShipmentOption(Item, FulfillmentCenter)'\n\u2022 Added line 'ShipmentService -> PackagingDAO: findShipmentOptions(Item, FulfillmentCenter)'\n\u2022 Added loop 'List of all FcPackagingOptions'\n\u2022 Added line 'PackagingDAO -> Packaging: canFitItem(Item)'\n\u2022 Added line 'PackagingDAO <-- Packaging: boolean'\n\u2022 Added condition 'if Item fits in Packaging'\n\u2022 Added line 'PackagingDAO -> PackagingDAO: add to result'\n\u2022 Removed line 'end loop'","\n\u2022 Added `AWS::Serverless-2016-10-31` transform\n\u2022 Added `Timeout` of `20` for `Function` in `Globals`\n\u2022 Added `TracingEnabled` of `True` for `Api` in `Globals`\n\u2022 Added `CodeUri`, `Handler`, `Runtime`, `Architectures`, `MemorySize`, `Environment`, and `Events` properties in `SustainableShipmentService`\n\u2022 Added `JAVA_TOOL_OPTIONS` of `-XX:+TieredCompilation -XX:TieredStopAtLevel=1` to environment\n\u2022 Added `Path` of `\/shipments` and `Method` of `get` to `SustainableShipmentService` `Events`","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 7e9a39cc657428f1eac34f69b72e24bb10b2a919":["\n\u2022 Added log error \"PackageDAO did not return any values\"\n\u2022 Added log error \"Invalid client inputs in packageDAO\"","\n+ Added queryStringParameters object to store parameters as key-value pairs\n+ Added fcCode key with NOTNASHVILLE as the value\n+ Added itemAsin key with 0132350882 as the value\n+ Added itemDescription key with Clean Code as the value\n+ Added itemLength key with 7.0 as the value\n+ Added itemWidth key with 1.2 as the value\n+ Added itemHeight key with 9.2 as the value\n- Removed newline at end of file","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 7d44be8df9938cadd4ab16c4377f71fc2cf0dcfc":["\n\u2022 Added a WeightedCostStrategy class\n\u2022 Added a ShipmentCost constructor with shipmentOption and cost\n\u2022 Modified CarbonCostStrategy to accept a shipmentOption\n\u2022 Added a Builder class with methods for constructing a WeightedCostStrategy\n\u2022 Modified getCost to return a ShipmentCost and use the weights provided in the Builder to calculate the total cost. \n\u2022 Added a MonetaryWeight and CarbonWeight instance variables. \n","\n\u2022 Added: createBagFcPackagingOption(\"IAD2\", \"5000\"),\ncreateBagFcPackagingOption(\"YOW4\", \"2000\"),\ncreateBagFcPackagingOption(\"YOW4\", \"5000\"),\ncreateBagFcPackagingOption(\"YOW4\", \"10000\"),\ncreateBagFcPackagingOption(\"IND1\", \"2000\"),\ncreateBagFcPackagingOption(\"IND1\", \"5000\"),\ncreateBagFcPackagingOption(\"ABE2\", \"2000\"),\ncreateBagFcPackagingOption(\"ABE2\", \"6000\"),\ncreateBagFcPackagingOption(\"PDX1\", \"5000\"),\ncreateBagFcPackagingOption(\"PDX1\", \"10000\"),\ncreateBagFcPackagingOption(\"YOW4\", \"5000\")\n\u2022 Removed: createBagFcPackagingOption(\"IAD2\", \"10000\")","SERVICE_ERROR_CAUSE: commit 7d44be8df9938cadd4ab16c4377f71fc2cf0dcfc:java.net.SocketTimeoutException: timeout","SERVICE_ERROR_CAUSE: commit 7d44be8df9938cadd4ab16c4377f71fc2cf0dcfc:java.net.SocketTimeoutException: timeout"," \n- Replaced MonetaryCostStrategy with WeightedCostStrategy \n+ Introduced WeightedCostStrategy","\n\u2022 Added: import of WeightedCostStrategy \n\u2022 No lines removed","\n+ Added WeightedCostStrategy class\n+ Added Packaging class\n+ Added Polybag class\n+ Added Box class\n+ Added WeightedCostStrategy object\n+ Added Item object \n+ Added FulfillmentCenter object\n+ Added getCost() methods for WeightedCostStrategy, MonetaryCostStrategy and CarbonCostStrategy\n- Removed unused import lines\n- Deleted unused comments"," \n- Changed the assertion from 1 to 3\n-Fixed an incorrect assertion statement","\n- Assert statement changed from 2 shipmentOptions to 4\n","\n\u2022 Added package5000cc\n\u2022 Added package6000cc\n\u2022 Added package10000cc\n\u2022 Removed  packag10000cc","\n\u2022 Added FcPackagingOption for iad2_10000cc, iad2_5000cc, yow4_2000cc, yow4_5000cc, yow4_10000cc, ind1_2000cc, ind1_5000cc, abe2_2000cc, abe2_6000cc, pdx1_5000cc, and pdx1_10000cc \n\u2022 Removed FcPackagingOption for iad2_10000cc","\n\u2022 Added PackagingOptions: iad2_5000cc, yow4_2000cc, yow4_5000cc, yow4_10000cc, ind1_2000cc, ind1_5000cc, abe2_2000cc, abe2_6000cc, pdx1_5000cc, pdx1_10000cc, yow4_5000cc\n\u2022 Removed PackagingOptions: None","\n\u2022 Added: \n  -  PrepareShipmentActivity.handleRequest(), PrepareShipmentRequest, PrepareShipmentResponse, CostStrategy,\n    MonetaryCostStrategy, PackagingDAO, PackagingDatastore, ServiceProvider, ShipmentService, Box, Polybag, \n    FcPackagingOption, FulfillmentCenter, Item, Material, Packaging, ShipmentCost, ShipmentOption, \n    CarbonCostStrategy, BlendedCostStrategy\n\u2022 Removed:  \n  -  NoPackagingFitsItemException, SustainabilityShipmentClientException, UnknownFulfillmentCenterException","DIFF ERRORS = 1","SERVICE ERRORS = 0"],"commit da8ebebccec551aa06a6f27d13ea271f59145574":["\n\u2022 Added field carbonWeight \n\u2022 Removed default constructor","\n\u2022 Added MonetaryCostStrategy and CarbonCostStrategy to the CostStrategy\n\u2022 Added MONETARY_WEIGHT and CARBON_WEIGHT BigDecimal variables\n\u2022 Added Builder() in provideCostStrategy with MonetaryCostStrategy and CarbonCostStrategy and their weights as parameters","\n-Removed CostStrategy and PackagingDatastore provider methods","\n\u2022 Added dependency injection of PackagingDatastore \n\u2022 Added dependency injection of CostStrategy\n\u2022 Added dependency injection of ShipmentService\n\u2022 Added dependency injection of PackagingDAO\n\u2022 Removed MonetaryCostStrategy \n\u2022 Refactored provideCostStrategy method to use WeightedCostStrategy","\n\n\u2022 Added injection and initialization of dependency framework\n\u2022 Added imports for dependency framework\n\u2022 Added PrepareShipmentResponse\n\u2022 Added ServiceComponent\n\u2022 Removed PrepareShipmentActivity\n\u2022 Removed ServiceProvider \n\u2022 Removed Logger logger\n\u2022 Removed Logger LogManager","\n- Changed ServiceProvider to ServiceComponent\n- Removed provider instantiation","\n\u2022 Replaced getProvider() with getDagger()\n\u2022 Changed getProvider() to provide DaggerServiceComponent instead of ServiceProvider","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 363217660f0cd12512f1a2a9bf3ac2e96e733012":["\n\n\u2022Added +handleRequest() method to PrepareShipmentActivity\n\u2022Added +getShipmentOption() method to  PrepareShipmentResponse\n\u2022Added +getCost() method to MonetaryCostStrategy\n\u2022Added +findShipmentOptions() method to PackagingDAO\n\u2022Added +createBoxFcPackagingOption() method to PackagingDatastore\n\u2022Added +getFcPackagingOptions() method to PackagingDatastore\n\u2022Added +findShipmentOption() and +getLowestCostShipmentOption() methods to ShipmentService\n\u2022Added +canFitItem() and +getMass() methods to Box\n\u2022Added -Labour_COST and -materialCostPerGram fields to MonetaryCostStrategy\n\u2022Added -fcPackagingOptions fields to PackagingDatastore and PackagingDAO\n\u2022Added -shipmentService to PrepareShipmentActivity\n\u2022Removed -shippingOption from PrepareShipmentRequest\n\u2022Removed -shipmentOption from PrepareShipmentResponse\n\u2022Removed -material from Packaging","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 09ca82e8764f924261146d51b00700dc6b5c3f10":["\n\u2022 Added log message to inform in case PackageDAO didn't return any relevant values\n\u2022 Added code to return ShipmentOption with null Packaging in case PackageDAO didn't return any values\n\u2022 Changed error message in case of invalid client inputs in PackageDAO","\n\u2022 Removed code related to SustainabilityShipmentServiceException \n\u2022 Added code to return \"null\" from findShipmentOption method","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit aa8bf43b3e03724efc6297278c2ee1c1d045ece1":["\n\n\u2022 Added a new class \"SustainabilityShipmentServiceException\" extending RuntimeException \n\u2022 Added a constructor taking in message and cause \n\u2022 Added another constructor taking in message \n\u2022 Removed all other lines of code","\n\n\u2022 Added import statements for NoPackagingFitsItemException, SustainabilityShipmentClientException, SustainabilityShipmentServiceException and UnknownFulfillmentCenterException \n\u2022 Added try-catch for NoPackagingFitsItemException, SustainabilityShipmentClientException, SustainabilityShipmentServiceException and UnknownFulfillmentCenterException","\n-Catch statement revised to better handle exceptions\n-Added NoPackagingFitsItemException handling with custom SustainabilityShipmentServiceException\n-Added UnknownFulfillmentCenterException handling with custom SustainabilityShipmentClientException"," \n\u2022 Added NoPackagingFitsItemException, SustainabilityShipmentClientException, SustainabilityShipmentServiceException, UnknownFulfillmentCenterException\n\u2022 Removed lines","\n\n-Removed assertNull\n+Added assertNotNull\n+Added assertThrows","\n\u2022 SmallItem, largeItem, existentFC, nonExistentFC defined\n\u2022 Added assertion for when fulfillment center is unknown\n\u2022 Added assertion for when item does not fit in packaging\n\u2022 Removed assertion for when fulfillment center and item can fit\n\u2022 Removed assertion for when fulfillment center is not known, and item cannot fit","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 8f189c1285e300a6565e5113ab37a6fb8d51f048":["\n\u2022 Added parameter \u2018itemDescription\u2019 to PrepareShipmentRequest builder.","\n\n\u2022 Added import LogManager and Logger\n\u2022 Removed unused import FulfillmentCenter","\n\u2022 Added Logger log to the ShipmentService class \n\u2022 Removed costStrategy attribute","\n\u2022 Added log.info() to log item and fulfillment center information.\n\u2022 Changed comparison in if statement from equals to contentEquals.","\n- Added method to calculate shipment costs\n- Removed variable assignment","\n\u2022Added method toString()\n\u2022Returns the variable fcCode","\n- Removed height field\n+ Added string toString() method overriding","\n\u2022 Added a private constructor\n\u2022 Added a method to set the asin","\n\u2022 Added \"fcCode\", \"itemAsin\", \"itemDescription\", \"itemLength\", \"itemWidth\" and \"itemHeight\" query string parameters.","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 5f5e226d64e0b433be2d8a99acb01e0ca18d65c3":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 0fea1664f004ecfe1ce179a40e7d0ad6abb083ae":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit e9399c8f3d26a3622b0b106e54271da30215e767":["\n\u2022 Added: HashMap to store packaging data\n\u2022 Added: Map to integrate HashMap data","\n-Removed redundant if statement\n-Added condition to check if i and j are consecutive\n-Added condition to check for matching fulfillment center and packaging\n-Removed element at j if conditions are met","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit de1023181d50e41eb75223915463bb9435be31a1":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 257404d1cdf2e7e2157cbda3efb2f10fa81483c6":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 6b78c3deee1a360f2602c18ca7d02ce1fe502852":["\n\u2022 Added null check for asasin \n\u2022 Removed contentEquals() comparison for item.getAsin()","\n\u2022 Added method: getShipmentCosts()\n\u2022 Removed line: private CharSequence anasin = \"3141592\";","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 21d20fb5cb915e51a933b290ddf8037387cdff24":["\n\u2022 Added canFitItem() and getMass() methods to Box class\n\u2022 Removed volume property from Polybag class\n\u2022 Added canFitItem() and getMass() methods to Polybag class\n\u2022 Added fulfillmentCenter property to FcPackagingOption class","\n\u2022 Added material enum type: LAMINATED_PLASTIC.","\n- Added relationship between Polybag and Packaging\n- Added relationship between Polybag and Material \n- Removed relationship between ShipmentCost and ShipmentOption \n- Removed relationship between PrepareShipmentRequest and Item\n- Removed relationship between PrepareShipmentRequest and FulfillmentCenter","DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit d323c593c7f3c24e72214fdd80c8b0ad84e477bc":["DIFF ERRORS = 0","SERVICE ERRORS = 0"],"commit 1e4ded891bf55ada359993d507d4f9480c8bd77a":["DIFF ERRORS = 0","SERVICE ERRORS = 0"]}